[
  {
    "line": 2,
    "elements": [
      {
        "line": 4,
        "name": "Browser testing",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 29808400,
              "status": "passed"
            },
            "line": 5,
            "name": "User test with \"firefox\" browser",
            "match": {
              "arguments": [
                {
                  "val": "\"firefox\"",
                  "offset": 15
                }
              ],
              "location": "com.autotradereu.stepdef.SearchSteps.userTestWithBrowser(java.lang.String)"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2021-02-10T20:57:41.442Z",
        "before": [
          {
            "result": {
              "duration": 6201263400,
              "status": "passed"
            },
            "match": {
              "location": "com.autotradereu.stepdef.Hooks.setup()"
            }
          }
        ],
        "line": 11,
        "name": "Homepage verification",
        "description": "",
        "id": "verifying-the-search;homepage-verification",
        "after": [
          {
            "embeddings": [
              {
                "data": "",
                "mime_type": "images/png",
                "name": "Screenshot"
              }
            ],
            "result": {
              "duration": 537439400,
              "status": "passed"
            },
            "match": {
              "location": "com.autotradereu.stepdef.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4548594400,
              "status": "passed"
            },
            "line": 12,
            "name": "User is on homepage",
            "match": {
              "location": "com.autotradereu.stepdef.SearchSteps.userIsOnHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "org.openqa.selenium.StaleElementReferenceException: stale element reference: element is not attached to the page document\n  (Session info: chrome\u003d87.0.4280.141)\nFor documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-ONJFJK9\u0027, ip: \u0027192.168.0.17\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002713.0.2\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 87.0.4280.141, chrome: {chromedriverVersion: 87.0.4280.88 (89e2380a3e36c..., userDataDir: C:\\Users\\tsume\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:64006}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 4f16f8e0da5c7515ba81684e0c3d8b11\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)\r\n\tat org.openqa.selenium.remote.RemoteWebElement.getText(RemoteWebElement.java:166)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:567)\r\n\tat org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)\r\n\tat com.sun.proxy.$Proxy19.getText(Unknown Source)\r\n\tat com.autotradereu.pages.SearchPage.verifytheFields(SearchPage.java:51)\r\n\tat com.autotradereu.stepdef.SearchSteps.verifyThatIsPresent(SearchSteps.java:47)\r\n\tat ✽.Verify that \"Browse by Make\" is present(file:///C:/Users/tsume/IntelliJ%20Workplace/The%20Last%20Framework%20project%20MG/AutoTradeEu/src/test/resources/features/search.feature:13)\r\n",
              "duration": 1125921100,
              "status": "failed"
            },
            "line": 13,
            "name": "Verify that \"Browse by Make\" is present",
            "match": {
              "arguments": [
                {
                  "val": "\"Browse by Make\"",
                  "offset": 12
                }
              ],
              "location": "com.autotradereu.stepdef.SearchSteps.verifyThatIsPresent(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 14,
            "name": "Verify that \"Browse by Style\" is present",
            "match": {
              "arguments": [
                {
                  "val": "\"Browse by Style\"",
                  "offset": 12
                }
              ],
              "location": "com.autotradereu.stepdef.SearchSteps.verifyThatIsPresent(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 15,
            "name": "Verify that \"Advance search\" is present",
            "match": {
              "arguments": [
                {
                  "val": "\"Advance search\"",
                  "offset": 12
                }
              ],
              "location": "com.autotradereu.stepdef.SearchSteps.verifyThatIsPresent(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 500900,
              "status": "skipped"
            },
            "line": 16,
            "name": "Verify that Search button is present",
            "match": {
              "location": "com.autotradereu.stepdef.SearchSteps.verifyThatSearchButtonIsPresent()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 17,
            "name": "Verify that Any \"Make\" and Any \"Model\" are present",
            "match": {
              "arguments": [
                {
                  "val": "\"Make\"",
                  "offset": 16
                },
                {
                  "val": "\"Model\"",
                  "offset": 31
                }
              ],
              "location": "com.autotradereu.stepdef.SearchSteps.verifyThatAnyAndAnyArePresent(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@smoke_test"
          },
          {
            "name": "@smoke_test,"
          },
          {
            "name": "@unit_test"
          }
        ]
      },
      {
        "line": 4,
        "name": "Browser testing",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 500800,
              "status": "passed"
            },
            "line": 5,
            "name": "User test with \"firefox\" browser",
            "match": {
              "arguments": [
                {
                  "val": "\"firefox\"",
                  "offset": 15
                }
              ],
              "location": "com.autotradereu.stepdef.SearchSteps.userTestWithBrowser(java.lang.String)"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2021-02-10T20:57:53.912Z",
        "before": [
          {
            "result": {
              "duration": 5754487600,
              "status": "passed"
            },
            "match": {
              "location": "com.autotradereu.stepdef.Hooks.setup()"
            }
          }
        ],
        "line": 20,
        "name": "User checks the Advance Search link",
        "description": "",
        "id": "verifying-the-search;user-checks-the-advance-search-link",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d87.0.4280.141)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-ONJFJK9\u0027, ip: \u0027192.168.0.17\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002713.0.2\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 87.0.4280.141, chrome: {chromedriverVersion: 87.0.4280.88 (89e2380a3e36c..., userDataDir: C:\\Users\\tsume\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:64133}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 2631f9802b209969814e3226b89919c1\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)\r\n\tat com.autotradereu.stepdef.Hooks.after(Hooks.java:37)\r\n",
              "duration": 7326500,
              "status": "failed"
            },
            "match": {
              "location": "com.autotradereu.stepdef.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9524120700,
              "status": "passed"
            },
            "line": 21,
            "name": "User is on Advance Search homepage",
            "match": {
              "location": "com.autotradereu.stepdef.AdvanceSearchSteps.userIsOnAdvanceSearchHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2980024000,
              "status": "passed"
            },
            "line": 22,
            "name": "User enter \"30004\" in the zip code text box",
            "match": {
              "arguments": [
                {
                  "val": "\"30004\"",
                  "offset": 11
                }
              ],
              "location": "com.autotradereu.stepdef.AdvanceSearchSteps.userEnterInTheZipCodeTextBox(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 393632900,
              "status": "passed"
            },
            "line": 23,
            "name": "User select the \"Certified\" check box under \"Condition\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Certified\"",
                  "offset": 16
                },
                {
                  "val": "\"Condition\"",
                  "offset": 44
                }
              ],
              "location": "com.autotradereu.stepdef.AdvanceSearchSteps.userSelectTheCheckBoxUnder(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5410422100,
              "status": "passed"
            },
            "line": 24,
            "name": "User select the \"Convertible\" check box under \"Style\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Convertible\"",
                  "offset": 16
                },
                {
                  "val": "\"Style\"",
                  "offset": 46
                }
              ],
              "location": "com.autotradereu.stepdef.AdvanceSearchSteps.userSelectTheCheckBoxUnder(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "org.openqa.selenium.support.ui.UnexpectedTagNameException: Element should have been \"select\" but was \"null\"\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-ONJFJK9\u0027, ip: \u0027192.168.0.17\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002713.0.2\u0027\nDriver info: driver.version: unknown\r\n\tat org.openqa.selenium.support.ui.Select.\u003cinit\u003e(Select.java:48)\r\n\tat com.autotradereu.pages.AdvanceSearchPage.modelYears(AdvanceSearchPage.java:73)\r\n\tat com.autotradereu.stepdef.AdvanceSearchSteps.userUpdateTheYearFromTo(AdvanceSearchSteps.java:43)\r\n\tat ✽.User Update the year from \"2017\" to \"2020\"(file:///C:/Users/tsume/IntelliJ%20Workplace/The%20Last%20Framework%20project%20MG/AutoTradeEu/src/test/resources/features/search.feature:25)\r\n",
              "duration": 620364300,
              "status": "failed"
            },
            "line": 25,
            "name": "User Update the year from \"2017\" to \"2020\"",
            "match": {
              "arguments": [
                {
                  "val": "\"2017\"",
                  "offset": 26
                },
                {
                  "val": "\"2020\"",
                  "offset": 36
                }
              ],
              "location": "com.autotradereu.stepdef.AdvanceSearchSteps.userUpdateTheYearFromTo(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 26,
            "name": "User select Make as \"BMW\" under Make, Model \u0026 Trim section",
            "match": {
              "arguments": [
                {
                  "val": "\"BMW\"",
                  "offset": 20
                }
              ],
              "location": "com.autotradereu.stepdef.AdvanceSearchSteps.userSelectMakeAsUnderMakeModelTrimSection(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 27,
            "name": "User clicks Search button",
            "match": {
              "location": "com.autotradereu.stepdef.AdvanceSearchSteps.userClicksSearchButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 28,
            "name": "User verifies that he is in result page",
            "match": {
              "location": "com.autotradereu.stepdef.AdvanceSearchSteps.userVerifiesThatHeIsInResultPage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 29,
            "name": "User verifies that he sees only \"BMW\" cars in the result page",
            "match": {
              "arguments": [
                {
                  "val": "\"BMW\"",
                  "offset": 32
                }
              ],
              "location": "com.autotradereu.stepdef.AdvanceSearchSteps.userVerifiesThatHeSeesOnlyCarsInTheResultPage(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 30,
            "name": "Display in console the total number of cars in the results page",
            "match": {
              "location": "com.autotradereu.stepdef.AdvanceSearchSteps.displayInConsoleTheTotalNumberOfCarsListingsInTheResultsPage()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@smoke_test"
          },
          {
            "name": "@smoke_test,"
          },
          {
            "name": "@unit_test"
          }
        ]
      }
    ],
    "name": "Verifying the search",
    "description": "",
    "id": "verifying-the-search",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/search.feature",
    "tags": [
      {
        "name": "@smoke_test",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      }
    ]
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2021-02-10T20:57:41.442Z",
        "before": [
          {
            "result": {
              "duration": 6525141400,
              "status": "passed"
            },
            "match": {
              "location": "com.autotradereu.stepdef.Hooks.setup()"
            }
          }
        ],
        "line": 4,
        "name": "User checks the Advance Search link",
        "description": "",
        "id": "verifying-the-search;user-checks-the-advance-search-link",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d87.0.4280.141)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-ONJFJK9\u0027, ip: \u0027192.168.0.17\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002713.0.2\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 87.0.4280.141, chrome: {chromedriverVersion: 87.0.4280.88 (89e2380a3e36c..., userDataDir: C:\\Users\\tsume\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:64009}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: ac5ceff3b554be610bc8155021f5b451\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)\r\n\tat com.autotradereu.stepdef.Hooks.after(Hooks.java:37)\r\n",
              "duration": 1998900,
              "status": "failed"
            },
            "match": {
              "location": "com.autotradereu.stepdef.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8256027800,
              "status": "passed"
            },
            "line": 5,
            "name": "User is on Advance Search homepage",
            "match": {
              "location": "com.autotradereu.stepdef.AdvanceSearchSteps.userIsOnAdvanceSearchHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1887648300,
              "status": "passed"
            },
            "line": 6,
            "name": "User enter \"30004\" in the zip code text box",
            "match": {
              "arguments": [
                {
                  "val": "\"30004\"",
                  "offset": 11
                }
              ],
              "location": "com.autotradereu.stepdef.AdvanceSearchSteps.userEnterInTheZipCodeTextBox(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 526968400,
              "status": "passed"
            },
            "line": 7,
            "name": "User select the \"Certified\" check box under \"Condition\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Certified\"",
                  "offset": 16
                },
                {
                  "val": "\"Condition\"",
                  "offset": 44
                }
              ],
              "location": "com.autotradereu.stepdef.AdvanceSearchSteps.userSelectTheCheckBoxUnder(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5518808200,
              "status": "passed"
            },
            "line": 8,
            "name": "User select the \"Convertible\" check box under \"Style\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Convertible\"",
                  "offset": 16
                },
                {
                  "val": "\"Style\"",
                  "offset": 46
                }
              ],
              "location": "com.autotradereu.stepdef.AdvanceSearchSteps.userSelectTheCheckBoxUnder(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1678808300,
              "status": "passed"
            },
            "line": 9,
            "name": "User Update the year from \"2017\" to \"2020\"",
            "match": {
              "arguments": [
                {
                  "val": "\"2017\"",
                  "offset": 26
                },
                {
                  "val": "\"2020\"",
                  "offset": 36
                }
              ],
              "location": "com.autotradereu.stepdef.AdvanceSearchSteps.userUpdateTheYearFromTo(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1923099700,
              "status": "passed"
            },
            "line": 10,
            "name": "User select Make as \"BMW\" under Make, Model \u0026 Trim section",
            "match": {
              "arguments": [
                {
                  "val": "\"BMW\"",
                  "offset": 20
                }
              ],
              "location": "com.autotradereu.stepdef.AdvanceSearchSteps.userSelectMakeAsUnderMakeModelTrimSection(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1270458800,
              "status": "passed"
            },
            "line": 11,
            "name": "User clicks Search button",
            "match": {
              "location": "com.autotradereu.stepdef.AdvanceSearchSteps.userClicksSearchButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "org.junit.ComparisonFailure: expected:\u003c[Certified BMW Convertibles for Sale in Alpharetta, GA (with Photos) - Autotrader]\u003e but was:\u003c[]\u003e\r\n\tat org.junit.Assert.assertEquals(Assert.java:117)\r\n\tat org.junit.Assert.assertEquals(Assert.java:146)\r\n\tat com.autotradereu.stepdef.AdvanceSearchSteps.userVerifiesThatHeIsInResultPage(AdvanceSearchSteps.java:67)\r\n\tat ✽.User verifies that he is in result page(file:///C:/Users/tsume/IntelliJ%20Workplace/The%20Last%20Framework%20project%20MG/AutoTradeEu/src/test/resources/features/search1.feature:12)\r\n",
              "duration": 11573851300,
              "status": "failed"
            },
            "line": 12,
            "name": "User verifies that he is in result page",
            "match": {
              "location": "com.autotradereu.stepdef.AdvanceSearchSteps.userVerifiesThatHeIsInResultPage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 13,
            "name": "User verifies that he sees only \"BMW\" cars in the result page",
            "match": {
              "arguments": [
                {
                  "val": "\"BMW\"",
                  "offset": 32
                }
              ],
              "location": "com.autotradereu.stepdef.AdvanceSearchSteps.userVerifiesThatHeSeesOnlyCarsInTheResultPage(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 14,
            "name": "Display in console the total number of cars in the results page",
            "match": {
              "location": "com.autotradereu.stepdef.AdvanceSearchSteps.displayInConsoleTheTotalNumberOfCarsListingsInTheResultsPage()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@unit_test"
          }
        ]
      }
    ],
    "name": "Verifying the search",
    "description": "",
    "id": "verifying-the-search",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/search1.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2021-02-10T20:57:41.442Z",
        "before": [
          {
            "result": {
              "duration": 6201263400,
              "status": "passed"
            },
            "match": {
              "location": "com.autotradereu.stepdef.Hooks.setup()"
            }
          }
        ],
        "line": 4,
        "name": "User checks the Advance Search link",
        "description": "",
        "id": "verifying-the-search;user-checks-the-advance-search-link",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d87.0.4280.141)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-ONJFJK9\u0027, ip: \u0027192.168.0.17\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002713.0.2\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 87.0.4280.141, chrome: {chromedriverVersion: 87.0.4280.88 (89e2380a3e36c..., userDataDir: C:\\Users\\tsume\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:64005}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 1cddefd56b64b84d67fd979692041103\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)\r\n\tat com.autotradereu.stepdef.Hooks.after(Hooks.java:37)\r\n",
              "duration": 2980700,
              "status": "failed"
            },
            "match": {
              "location": "com.autotradereu.stepdef.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8567472500,
              "status": "passed"
            },
            "line": 5,
            "name": "User is on Advance Search homepage",
            "match": {
              "location": "com.autotradereu.stepdef.AdvanceSearchSteps.userIsOnAdvanceSearchHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1952008700,
              "status": "passed"
            },
            "line": 6,
            "name": "User enter \"30004\" in the zip code text box",
            "match": {
              "arguments": [
                {
                  "val": "\"30004\"",
                  "offset": 11
                }
              ],
              "location": "com.autotradereu.stepdef.AdvanceSearchSteps.userEnterInTheZipCodeTextBox(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 544696800,
              "status": "passed"
            },
            "line": 7,
            "name": "User select the \"Certified\" check box under \"Condition\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Certified\"",
                  "offset": 16
                },
                {
                  "val": "\"Condition\"",
                  "offset": 44
                }
              ],
              "location": "com.autotradereu.stepdef.AdvanceSearchSteps.userSelectTheCheckBoxUnder(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5865652600,
              "status": "passed"
            },
            "line": 8,
            "name": "User select the \"Convertible\" check box under \"Style\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Convertible\"",
                  "offset": 16
                },
                {
                  "val": "\"Style\"",
                  "offset": 46
                }
              ],
              "location": "com.autotradereu.stepdef.AdvanceSearchSteps.userSelectTheCheckBoxUnder(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5776874500,
              "status": "passed"
            },
            "line": 9,
            "name": "User Update the year from \"2017\" to \"2020\"",
            "match": {
              "arguments": [
                {
                  "val": "\"2017\"",
                  "offset": 26
                },
                {
                  "val": "\"2020\"",
                  "offset": 36
                }
              ],
              "location": "com.autotradereu.stepdef.AdvanceSearchSteps.userUpdateTheYearFromTo(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1577811900,
              "status": "passed"
            },
            "line": 10,
            "name": "User select Make as \"BMW\" under Make, Model \u0026 Trim section",
            "match": {
              "arguments": [
                {
                  "val": "\"BMW\"",
                  "offset": 20
                }
              ],
              "location": "com.autotradereu.stepdef.AdvanceSearchSteps.userSelectMakeAsUnderMakeModelTrimSection(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14498493300,
              "status": "passed"
            },
            "line": 11,
            "name": "User clicks Search button",
            "match": {
              "location": "com.autotradereu.stepdef.AdvanceSearchSteps.userClicksSearchButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d87.0.4280.141)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-ONJFJK9\u0027, ip: \u0027192.168.0.17\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002713.0.2\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 87.0.4280.141, chrome: {chromedriverVersion: 87.0.4280.88 (89e2380a3e36c..., userDataDir: C:\\Users\\tsume\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:64005}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 1cddefd56b64b84d67fd979692041103\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.getTitle(RemoteWebDriver.java:281)\r\n\tat com.autotradereu.stepdef.AdvanceSearchSteps.userVerifiesThatHeIsInResultPage(AdvanceSearchSteps.java:66)\r\n\tat ✽.User verifies that he is in result page(file:///C:/Users/tsume/IntelliJ%20Workplace/The%20Last%20Framework%20project%20MG/AutoTradeEu/src/test/resources/features/search2.feature:12)\r\n",
              "duration": 9006673200,
              "status": "failed"
            },
            "line": 12,
            "name": "User verifies that he is in result page",
            "match": {
              "location": "com.autotradereu.stepdef.AdvanceSearchSteps.userVerifiesThatHeIsInResultPage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 13,
            "name": "User verifies that he sees only \"BMW\" cars in the result page",
            "match": {
              "arguments": [
                {
                  "val": "\"BMW\"",
                  "offset": 32
                }
              ],
              "location": "com.autotradereu.stepdef.AdvanceSearchSteps.userVerifiesThatHeSeesOnlyCarsInTheResultPage(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 14,
            "name": "Display in console the total number of cars in the results page",
            "match": {
              "location": "com.autotradereu.stepdef.AdvanceSearchSteps.displayInConsoleTheTotalNumberOfCarsListingsInTheResultsPage()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@smoke_test,"
          },
          {
            "name": "@unit_test"
          }
        ]
      }
    ],
    "name": "Verifying the search",
    "description": "",
    "id": "verifying-the-search",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/search2.feature",
    "tags": []
  }
]